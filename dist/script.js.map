{"version":3,"sources":["main.js"],"names":["initializeYoutubeApi","Promise","resolve","reject","tag","document","createElement","id","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onerror","window","onYouTubeIframeAPIReady","initializePlayer","iframeId","onPlayerStateChange","onError","player","then","YT","Player","events","onReady","onStateChange","error","initializeVideo","play","querySelector","screensaver","iframe","getElementById","getPlayer","event","data","PlayerState","ENDED","style","display","classList","add","addEventListener","remove","playVideo","console","getNumber","str","num","String","match","Array","isArray","updateArrowState","arrow","condition","disabledClass","contains","setNotEmptyInputs","querySelectorAll","forEach","input","e","target","value","initializeSlider","moveTo","slide","offset","isMobile","innerWidth","GUTTER_WIDTH","sliderContainer","marginLeft","concat","slideNumber","innerText","arrowLeft","arrowRight","COUNT_OF_SLIDES","length","toggleClass","controlId","className","element","checked","toggleTheme","body","toggleMenu","svgPollyfill","test","navigator","userAgent","call","svg","object","use","getAttribute","replaceChild"],"mappings":"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","file":"script.js","sourcesContent":["\nconst initializeYoutubeApi = () => new Promise((resolve, reject) => {\n\tconst tag = document.createElement('script');\n  \ttag.id = 'iframe-demo';\n  \ttag.src = 'https://www.youtube.com/iframe_api';\n  \tconst firstScriptTag = document.getElementsByTagName('script')[0];\n\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n\ttag.onerror = reject;\n\twindow.onYouTubeIframeAPIReady = resolve;\n});\n\nconst initializePlayer = (iframeId, onPlayerStateChange, onError) => {\n\tlet player;\n\n\treturn () => Promise.resolve().then(\n\t\t() => {\n\t\t\tif (!window.YT) {\n\t\t\t\treturn initializeYoutubeApi();\n\t\t\t}\n\t\t}\n\t).then(() => new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tif (player) {\n\t\t\t\treturn resolve(player);\n\t\t\t}\n\n\t\t\tplayer = new YT.Player(iframeId, {\n\t\t\t\tevents: {\n\t\t\t\t\t'onReady': () => {\n\t\t\t\t\t\tresolve(player);\n\t\t\t\t\t},\n\t\t\t\t\t'onError': onError,\n\t\t\t\t\t'onStateChange': onPlayerStateChange\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t}));\n};\n\nconst initializeVideo = () => {\n\tconst play = document.querySelector('.player__control--play');\n\tconst screensaver = document.querySelector('.player__screen-placeholder');\n\tconst iframe = document.getElementById('video');\n\tlet error = false;\n\n\tconst onPlayerStateChange = (event) => {\n\t\tif (\n\t\t\tevent.data == YT.PlayerState.ENDED\n\t\t) {\n\t\t\tscreensaver.style.display = 'block';\n\t\t\tplay.style.display = 'block';\n\t\t\tiframe.classList.add('player__iframe--hidden');\n\t\t}\n\t};\n\n\tconst getPlayer = initializePlayer('video', onPlayerStateChange, () => {\n\t\terror = true;\n\t});\n\n\tplay.addEventListener('click', () => {\n\t\tgetPlayer().then(player => {\n\t\t\tscreensaver.style.display = 'none';\n\t\t\tplay.style.display = 'none';\n\t\t\tiframe.classList.remove('player__iframe--hidden');\n\t\t\tplayer.playVideo();\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\t});\n};\n\nconst getNumber = (str) => {\n\tconst num = String(str).match('/(\\d+)/');\n\n\tif (!Array.isArray(num)) {\n\t\treturn 0;\n\t}\n\n\treturn +num[1];\n};\n\nconst updateArrowState = (arrow, condition) => {\n\tconst disabledClass = 'slider-controls__arrow--disabled';\n\n\tif (condition) {\n\t\tarrow.classList.add(disabledClass);\n\t} else if (arrow.classList.contains(disabledClass)) {\n\t\tarrow.classList.remove(disabledClass);\n\t}\n};\n\nconst setNotEmptyInputs = () => {\n\tdocument.querySelectorAll('.form__input').forEach(input => {\n\t\tinput.addEventListener('change', (e) => {\n\t\t\tif (e.target.value) {\n\t\t\t\te.target.classList.add('form__input--not-empty');\n\t\t\t} else {\n\t\t\t\te.target.classList.remove('form__input--not-empty');\n\t\t\t}\n\t\t});\n\t});\n};\n\nconst initializeSlider = () => {\n\tconst slideNumber = document.querySelector('.slider-controls__current-number');\n\tconst arrowLeft = document.querySelector('.slider-controls__arrow--left');\n\tconst arrowRight = document.querySelector('.slider-controls__arrow--right');\n\tconst sliderContainer = document.querySelector('.slider__container');\n\n\tconst SLIDE_WIDTH = 468;\n\tconst GUTTER_WIDTH = 10;\n\tconst getSlideWidth = width => width + (GUTTER_WIDTH * 2);\n\tconst COUNT_OF_SLIDES = sliderContainer.querySelectorAll('.slider__slide').length;\n\n\tlet slide = getNumber(slideNumber.innerText) || 1;\n\n\tconst moveTo = (slide) => {\n\t\tconst isMobile = window.innerWidth <= 600;\n\t\tconst offset = getSlideWidth(\n\t\t\tisMobile ? (window.innerWidth * 0.95) : SLIDE_WIDTH\n\t\t) * (slide - 1);\n\n\t\tsliderContainer.style.marginLeft = `${-offset}px`;\n\t\tslideNumber.innerText = `${slide}`;\n\n\t\tupdateArrowState(arrowLeft, slide === 1);\n\t\tupdateArrowState(arrowRight, slide === COUNT_OF_SLIDES);\n\t};\n\n\tarrowRight.addEventListener('click', (e) => {\n\t\tif (slide >= COUNT_OF_SLIDES) {\n\t\t\treturn;\n\t\t}\n\n\t\tmoveTo(++slide);\n\t});\n\n\tarrowLeft.addEventListener('click', (e) => {\n\t\tif (slide <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tmoveTo(--slide);\n\t});\n};\n\nconst toggleClass = (controlId, className, element) => {\n\tconst button = document.getElementById(controlId);\n\tbutton.addEventListener('change', (e) => {\n\t\tif (e.target.checked) {\n\t\t\telement.classList.add(className);\n\t\t} else {\n\t\t\telement.classList.remove(className);\n\t\t}\n\t});\n};\n\nconst toggleTheme = () => {\n\ttoggleClass('theme-button', 'theme-is-black', document.body);\n};\n\nconst toggleMenu = () => {\n\ttoggleClass('menu-button', 'navigation--show', document.querySelector('.navigation'));\n};\n\nconst svgPollyfill = () => {\n\tif (!/MSIE|Trident/.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\t\n\t[].forEach.call(document.querySelectorAll('svg'), svg => {\n\t\tconst use = svg.querySelector('use'); \n\t\n\t\tif (use) {\n\t\t\tconst object = document.createElement('object');\n\t\t\tobject.data = use.getAttribute('xlink:href');\n\t\t\tobject.className = svg.getAttribute('class');\n\t\t\tsvg.parentNode.replaceChild(object, svg);\n\t\t}\n\t});\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tinitializeVideo();\n\tinitializeSlider();\n\tsetNotEmptyInputs();\n\ttoggleTheme();\n\ttoggleMenu();\n\tsvgPollyfill();\n});\n"]}